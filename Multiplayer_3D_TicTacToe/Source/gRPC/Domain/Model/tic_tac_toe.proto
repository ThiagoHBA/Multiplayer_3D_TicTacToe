syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.tictactoe";
option java_outer_classname = "TicTacToeProto";
option objc_class_prefix = "HLW";

package tictactoe;

service TicTacToe {
    rpc ConnectedMessage(ConnectMessageRequest) returns (ConnectMessageResponse) {}
    rpc StartGame(StartGameRequest) returns (StartGameResponse) {}
    rpc PlayerMove(PlayerMoveRequest) returns (PlayerMoveResponse) {}
    rpc ChatMessage(ChatMessageRequest) returns (ChatMessageResponse) {}
    rpc Surrender(SurrenderRequest) returns (SurrenderResponse) {}
}

// Entities

enum TileStyle {
    cross = 0;
    circle = 1;
}

message TilePosition {
    int64 row = 1;
    int64 column = 2;
    int64 depth = 3;
}

message Player {
    int64 id = 1;
    string name = 2;
    TileStyle tileStyle = 3;
    repeated TilePosition tiles = 4;
}

message Tile {
    int64 boardId = 1;
    TileStyle style = 2;
    optional TilePosition position = 3;
}

message WinningTiles {
    repeated TilePosition tiles = 1;
}

enum BoardColor {
    blue = 0;
    red = 1;
    green = 2;
}

message Board {
    int64 id = 1;
    BoardColor color = 2;
    repeated Tile tiles = 3;
}

message GameflowParameters {
    repeated Player players = 1;
    int64 shiftPlayerId = 2;
    bool gameStarted = 3;
    bool gameEnded = 4;
    repeated Board boards = 5;
    optional Player winner = 6;
}

message ChatMessage {
    Player sender = 1;
    string text = 2;
    string sendedDate = 3;
}

message ChatParameters {
    repeated ChatMessage messages = 1;
}

// MARK: Requests

message SurrenderRequest {
    Player player = 1;
}

message ConnectMessageRequest {
    int64 port = 1;
}

message StartGameRequest { }

message PlayerMoveRequest {
    Player player = 1;
    int64 boardId = 2;
    Tile addedTile = 3;
}

message ChatMessageRequest {
    ChatMessage chatMessage = 1;
}

// MARK:  Response

message SurrenderResponse {
    Player winner = 1;
    GameflowParameters parameters = 2;
}

message ChatMessageResponse {
    bool success = 1;
    ChatParameters chatParameters = 2;
}

message ConnectMessageResponse {
    bool connected = 1;
    Player identifier = 2;
    Player hostPlayer = 3;
    GameflowParameters parameters = 4;
}

message StartGameResponse {
    int64 starterPlayerId = 1;
    GameflowParameters parameters = 2;
}

message PlayerMoveResponse {
    bool success = 1;
    repeated TilePosition winningTiles = 2;
    GameflowParameters parameters = 3;
}


//
//message SelectStarterPlayerResponse {}
//
//message StartGameResponse {}
//
//message AddTileOnBoardResponse {}
//
//message AddTileToPlayerResponse {}
//
//message ChangePlayerShiftResponse {}
//
//message PlayerSurrenderResponse {}
//
//message AddChatMessageResponse {}
//
//message RestartGameResponse {}
